import httplib, urllib
import boto3
import os
import logging
import json

from base64 import b64decode

logger = logging.getLogger()
logger.setLevel(logging.INFO)

eapp_uuid = os.environ['app_uuid']
app_uuid = boto3.client('kms').decrypt(CiphertextBlob=b64decode(eapp_uuid))['Plaintext']

ebearer_token = os.environ['bearer_token']
bearer_token = boto3.client('kms').decrypt(CiphertextBlob=b64decode(ebearer_token))['Plaintext']

params = "{\n    \"sender_id\": \"layer:///identities/{identity}\",\n    \"parts\": [\n        {\n            \"body\": \"{requestor name} - Requested assistance thru Button :)\",\n            \"mime_type\": \"text/plain\"\n        }\n    ]\n}"

headers = {
    'accept': "application/vnd.layer+json; version=2.0",
    'authorization': bearer_token,
    'content-type': "application/json",
    'cache-control': "no-cache"
    }

def lambda_handler(event, context):
    logging.info('Received event: ' + json.dumps(event))

    conn = httplib.HTTPSConnection("api.layer.com")
    conn.request("POST", "/apps/{app_id}/conversations/{conversation_id}/messages", params, headers)
    response = conn.getresponse()

    logger.info(response.status)
    logger.info(response.reason)

    data = response.read()
    logger.info(data.decode("utf-8"))
